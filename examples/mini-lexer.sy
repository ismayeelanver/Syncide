type token_type :: enum(Number(Int64) | Float(Float64) |
                 Op(Char));

type token :: struct {
 tt: token_type,
 tv: Str
};

type Lexer :: struct {
 tokens: Vec<token>,
 content: Str
}

let get_contents(file: Str, l: *Lexer) ~ *Lexer :: begin
 l:content = read_to_string(file);
 return l;
end

let tokenize(l: *Lexer) ~ *Lexer :: begin
 return l:tokens
end

let main() ~ Int :: begin
 println("Hello world!");
end